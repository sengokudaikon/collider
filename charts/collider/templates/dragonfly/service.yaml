{{- if .Values.dragonfly.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "collider.fullname" . }}-dragonfly
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "collider.dragonfly.labels" . | nindent 4 }}
spec:
  type: {{ .Values.dragonfly.service.type }}
  ports:
  - port: {{ .Values.dragonfly.service.port }}
    targetPort: dragonfly
    protocol: TCP
    name: dragonfly
    {{- if and (eq .Values.dragonfly.service.type "NodePort") .Values.dragonfly.service.nodePort }}
    nodePort: {{ .Values.dragonfly.service.nodePort }}
    {{- end }}
  selector:
    {{- include "collider.dragonfly.selectorLabels" . | nindent 4 }}
---
{{- if .Values.dragonfly.enabled }}
# Redis alias service for compatibility
apiVersion: v1
kind: Service
metadata:
  name: {{ include "collider.fullname" . }}-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "collider.dragonfly.labels" . | nindent 4 }}
spec:
  type: ClusterIP
  ports:
  - port: {{ .Values.dragonfly.service.port }}
    targetPort: dragonfly
    protocol: TCP
    name: redis
  selector:
    {{- include "collider.dragonfly.selectorLabels" . | nindent 4 }}
{{- end }}
{{- end }}