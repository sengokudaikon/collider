{{- if .Values.app.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "collider.fullname" . }}-app
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "collider.app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "collider.app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "collider.app.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:17-alpine
        command:
        - sh
        - -c
        - |
          until pg_isready -h {{ include "collider.fullname" . }}-postgres -p 5432 -U {{ .Values.postgres.auth.username }}; do
            echo "Waiting for postgres to be ready..."
            sleep 2
          done
      - name: wait-for-dragonfly
        image: redis:alpine
        command:
        - sh
        - -c
        - |
          until redis-cli -h {{ include "collider.fullname" . }}-dragonfly -p 6379 -a {{ .Values.dragonfly.auth.password }} ping; do
            echo "Waiting for dragonfly to be ready..."
            sleep 2
          done
      containers:
      - name: app
        image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.app.config.port }}
          name: http
        envFrom:
        - configMapRef:
            name: {{ include "collider.fullname" . }}-app-config
        - secretRef:
            name: {{ include "collider.fullname" . }}-app-secret
        {{- if .Values.app.healthcheck.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.app.healthcheck.path }}
            port: http
          initialDelaySeconds: {{ .Values.app.healthcheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.app.healthcheck.periodSeconds }}
          timeoutSeconds: {{ .Values.app.healthcheck.timeoutSeconds }}
          failureThreshold: {{ .Values.app.healthcheck.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.app.healthcheck.path }}
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        {{- end }}
        {{- include "collider.resources" .Values.app | nindent 8 }}
{{- end }}