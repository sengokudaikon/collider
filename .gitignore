# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# IDE
.idea/
.vscode/
*.swp
*.swo
*~

# OS
.DS_Store
Thumbs.db

# Environment variables
.env
.env.*.local

# Allow template .env files but ignore the active ones
!.env.example
!.env.local
!.env.dev
!.env.staging
!.env.prod

# Test coverage
tarpaulin-report.html
cobertura.xml
coverage/

# Logs
*.log
/target
.shuttle*
Secrets*.toml

# Terraform
**/.terraform/
**/.terraform.lock.hcl
**/terraform.tfstate
**/terraform.tfstate.backup
**/terraform.tfvars.backup
**/*.tfplan
**/*.tfplan.*
**/crash.log
**/override.tf
**/override.tf.json
**/*_override.tf
**/*_override.tf.json
**/.terraformrc
**/terraform.rc

# Docker
.docker/

# Node.js (frontend)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build artifacts
*.profraw
build_rs_cov.profraw

# Performance profiling
flamegraph.svg
perf.data*
callgraph.png

# Benchmarking results
infrastructure/benchmarking/results/
**/benchmark-results/

# Load testing
vegeta/
hey/

# Database
*.db
*.sqlite*

# SSL certificates
*.pem
*.crt
*.key

# Secrets
secrets/
*.secret
/infrastructure/terraform/.terraform.tfstate.lock.info
/.env.prod
